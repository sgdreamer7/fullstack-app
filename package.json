{
  "name": "fullstack-app",
  "version": "1.0.0",
  "main": "",
  "author": "Vladimir Sherbina <vns.scherbina@gmail.com>",
  "license": "MIT",
  "scripts": {
    "status": "docker ps -a",
    "status:ids-names-status": "yarn status --format \"{{.ID}}\t{{.Names}}\t\t{{.Status}}\"",
    "status:names-status": "yarn status --format \"{{.Names}}\t\t{{.Status}}\"",
    "status:names": "yarn status --format \"{{.Names}}\" | sort",
    "status:images-names": "yarn status --format \"{{.Image}}\t\t{{.Names}}\" | sort",
    "build": "./scripts.sh 'eval docker-compose build'",
    "start": "./scripts.sh 'eval docker-compose up -d'",
    "stop": "./scripts.sh 'eval docker-compose down'",
    "sh:router": "./scripts.sh 'eval docker exec -it ${COMPOSE_PROJECT_NAME}-nginx-router sh'",
    "logs:router": "./scripts.sh 'eval docker logs ${COMPOSE_PROJECT_NAME}-nginx-router'",
    "logs:frontend": "./scripts.sh 'eval docker logs ${COMPOSE_PROJECT_NAME}-frontend'",
    "logs:adminer": "./scripts.sh 'eval docker logs ${COMPOSE_PROJECT_NAME}-adminer'",
    "logs:mailhog": "./scripts.sh 'eval docker logs ${COMPOSE_PROJECT_NAME}-mailhog'",
    "logs:minio": "./scripts.sh 'eval docker logs ${COMPOSE_PROJECT_NAME}-minio'",
    "logs:minio-client": "./scripts.sh 'eval docker logs ${COMPOSE_PROJECT_NAME}-minio-client'",
    "build:blue": "run(){ export COMPOSE_PROJECT_NAME_PREFIX=\"blue-\" && export CURRENT_STATE=\"blue\" && yarn build $1; }; run",
    "start:blue": "run(){ export COMPOSE_PROJECT_NAME_PREFIX=\"blue-\" && export CURRENT_STATE=\"blue\" && yarn start $1; }; run",
    "stop:blue": "run(){ export COMPOSE_PROJECT_NAME_PREFIX=\"blue-\" && export CURRENT_STATE=\"blue\" && yarn stop $1; }; run",
    "build:green": "run(){ export COMPOSE_PROJECT_NAME_PREFIX=\"green-\" && export CURRENT_STATE=\"green\" && yarn build $1; }; run",
    "start:green": "run(){ export COMPOSE_PROJECT_NAME_PREFIX=\"green-\" && export CURRENT_STATE=\"green\" && yarn start $1; }; run",
    "stop:green": "run(){ export COMPOSE_PROJECT_NAME_PREFIX=\"green-\" && export CURRENT_STATE=\"green\" && yarn stop $1; }; run",
    "build:blue-green-router": "export COMPOSE_PROJECT_NAME_PREFIX=\"blue-green-\" && ./scripts.sh 'docker-compose -f docker-compose.blue-green.yml build'",
    "start:blue-green-router": "export COMPOSE_PROJECT_NAME_PREFIX=\"blue-green-\" && ./scripts.sh 'docker-compose -f docker-compose.blue-green.yml up -d'",
    "stop:blue-green-router": "export COMPOSE_PROJECT_NAME_PREFIX=\"blue-green-\" && ./scripts.sh 'docker-compose -f docker-compose.blue-green.yml down'",
    "reload:blue-green-router": "export COMPOSE_PROJECT_NAME_PREFIX=\"blue-green-\" && ./scripts.sh 'eval docker exec -it -e BLUE_GREEN_PORT=${BLUE_GREEN_PORT} -e CURRENT_STATE=${CURRENT_STATE} ${COMPOSE_PROJECT_NAME}-router /usr/src/app/reload.sh'",
    "reload:blue-green-router:blue": "run(){ export CURRENT_STATE=\"blue\" && yarn reload:blue-green-router $1; }; run",
    "reload:blue-green-router:green": "run(){ export CURRENT_STATE=\"green\" && yarn reload:blue-green-router $1; }; run",
    "logs:blue-green-router": "export COMPOSE_PROJECT_NAME_PREFIX=\"blue-green-\" && ./scripts.sh 'eval docker logs ${COMPOSE_PROJECT_NAME}-router'",
    "sh:blue-green-router": "export COMPOSE_PROJECT_NAME_PREFIX=\"blue-green-\" && ./scripts.sh 'eval docker exec -it ${COMPOSE_PROJECT_NAME}-router sh'",
    "cmd:blue-green-router": "run(){ export COMPOSE_PROJECT_NAME_PREFIX=\"blue-green-\" && ./scripts.sh 'eval docker exec -it ${COMPOSE_PROJECT_NAME}-router' $1 $2 $3 $4 $5 $6 $7 $8 $9; }; run",
    "status:blue-green": "run(){ yarn cmd:blue-green-router $1 \"wget -q -O - http://127.0.0.1/status | xargs | echo\"; }; run",
    "start:blue-green": "run(){ yarn start:blue $1 && yarn start:green $1 && yarn start:blue-green-router $1 $2; }; run",
    "stop:blue-green": "run(){ yarn stop:blue $1 && yarn stop:green $1 && yarn stop:blue-green-router $1; }; run",
    "switch:to-blue": "run(){ yarn reload:blue-green-router:green $1 && yarn build:blue $1 && yarn stop:blue $1 && yarn start:blue $1 && yarn reload:blue-green-router:blue $1; }; run",
    "switch:to-green": "run(){ yarn reload:blue-green-router:blue $1 && yarn build:green $1 && yarn stop:green $1 && yarn start:green $1 && yarn reload:blue-green-router:green $1; }; run"
  }
}
