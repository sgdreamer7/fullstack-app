version: "3.8"

services:
  nginx-router:
    networks: { default: { aliases: ["${COMPOSE_PROJECT_NAME}.local"] } }
    image: ${DOCKER_USERNAME}/${COMPOSE_PROJECT_NAME}-nginx-router:${NGINX_ROUTER_TAG}
    container_name: ${COMPOSE_PROJECT_NAME}-nginx-router
    build: { context: ./nginx-router }
    restart: always
    ports: ["${NGINX_PORT}:${NGINX_PORT}"]
    depends_on: ["adminer", "mailhog", "minio", "frontend", "backend"]
    env_file: "./env/nginx-router.env"
    environment:
      - NGINX_PORT=${NGINX_PORT}

  minio:
    image: minio/minio
    container_name: ${COMPOSE_PROJECT_NAME}-minio
    restart: always
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_API_SIGNATURE=${MINIO_API_SIGNATURE}
    volumes: ["minio:/data"]
    command: "server /data"

  minio-client:
    image: minio/mc
    container_name: ${COMPOSE_PROJECT_NAME}-minio-client
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_API_SIGNATURE=${MINIO_API_SIGNATURE}
    volumes: ["./minio.init:/minio.init"]
    entrypoint: sh
    depends_on: ["minio"]
    command: "/minio.init/init.sh"

  adminer:
    image: adminer
    container_name: ${COMPOSE_PROJECT_NAME}-adminer
    restart: always

  mailhog:
    image: mailhog/mailhog
    container_name: ${COMPOSE_PROJECT_NAME}-mailhog
    restart: always
    ports: ["${MAILHOG_PORT}:8025"]

  frontend:
    image: ${DOCKER_USERNAME}/${COMPOSE_PROJECT_NAME}-frontend:${FRONTEND_TAG}
    container_name: ${COMPOSE_PROJECT_NAME}-frontend
    build:
      {
        context: "../../apps/frontend-${FRONTEND_TYPE}",
        dockerfile: Dockerfile,
      }
    restart: always
    env_file: "./env/frontend.env"
    volumes:
      - ../../apps/frontend-${FRONTEND_TYPE}:/usr/src/app

  backend:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-backend
    restart: always

volumes:
  minio:
