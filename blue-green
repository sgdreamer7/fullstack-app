#!/bin/sh
RUNNING_ENVIRONMENT="development"
RUNNING_ENVIRONMENT_CMD="dev"
case "$2" in
  "dev")
        RUNNING_ENVIRONMENT="development"
        RUNNING_ENVIRONMENT_CMD="dev"
      ;;
   "prod")
      RUNNING_ENVIRONMENT="production"
      RUNNING_ENVIRONMENT_CMD="prod"
     ;;
   "staging")
      RUNNING_ENVIRONMENT="staging"
      RUNNING_ENVIRONMENT_CMD="staging"
     ;;
    "test")
      RUNNING_ENVIRONMENT="test"
      RUNNING_ENVIRONMENT_CMD="test"
     ;;
esac
ENV_VARS="$(cat environments/${RUNNING_ENVIRONMENT}/.env | xargs)"
export $(echo ${ENV_VARS} | xargs)
case "$1" in
  "status")
      ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD "wget -q -O - http://127.0.0.1/status | xargs | echo"
      ;;
  "start")
      echo "Starting application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment in blue/green mode ..."
      ./blue start RUNNING_ENVIRONMENT_CMD
      ./green start RUNNING_ENVIRONMENT_CMD
      ./blue-green-router start RUNNING_ENVIRONMENT_CMD;
      echo "Current state for the application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment is '$(wget -q -O - http://127.0.0.1/status)'";
      ;;
  "stop")
      echo "Stoping application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment in blue/green mode ..."
      ./blue stop RUNNING_ENVIRONMENT_CMD
      ./green stop RUNNING_ENVIRONMENT_CMD
      ./blue-green-router stop RUNNING_ENVIRONMENT_CMD;
      ;;
  "switch-to-blue")
      echo "Switching application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment to the 'blue' state ..."
      ./blue build RUNNING_ENVIRONMENT_CMD
      ./blue stop RUNNING_ENVIRONMENT_CMD 
      ./blue start RUNNING_ENVIRONMENT_CMD
      ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD sh -c "\"/etc/nginx/wait-for-http -q -t 60 \\\$(/etc/nginx/get-host|xargs):\${BLUE_PORT}\""
      ./blue-green-router reload-blue RUNNING_ENVIRONMENT_CMD
      ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD sh -c "\"/etc/nginx/wait-for-http -q -t 60 \\\$(/etc/nginx/get-host|xargs):\${BLUE_GREEN_PORT}\"";
      echo "Current state is '$(wget -q -O - http://127.0.0.1/status)'"
     ;;
   "switch-to-green")
      echo "Switching application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment to the 'green' state ..."
      ./green build RUNNING_ENVIRONMENT_CMD
      ./green stop RUNNING_ENVIRONMENT_CMD 
      ./green start RUNNING_ENVIRONMENT_CMD
      ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD sh -c "\"/etc/nginx/wait-for-http -q -t 60 \\\$(/etc/nginx/get-host|xargs):\${GREEN_PORT}\""
      ./blue-green-router reload-green RUNNING_ENVIRONMENT_CMD
      ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD sh -c "\"/etc/nginx/wait-for-http -q -t 60 \\\$(/etc/nginx/get-host|xargs):\${BLUE_GREEN_PORT}\"";
       echo "Current state for the application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment is '$(wget -q -O - http://127.0.0.1/status)'";
     ;;
  "deploy")
      echo "Deploying application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment to the new state ..."
      STATE_BEFORE_DEPLOYMENT=$(wget -q -O - http://127.0.0.1/status)
      echo "Current state for the application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment is '${STATE_BEFORE_DEPLOYMENT}'";
      if [ "$STATE_BEFORE_DEPLOYMENT" == "blue" ];
        then
          echo "Deploying application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment to the 'green' state ..."
          ./blue-green switch-to-green RUNNING_ENVIRONMENT_CMD;
        else
          echo "Deploying application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment to the 'blue' state ..."
          ./blue-green switch-to-blue RUNNING_ENVIRONMENT_CMD;
      fi
     ;;
  "rollback")
      echo "Rollback application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment to the previous state ..."
      STATE_BEFORE_ROLLBACK=$(wget -q -O - http://127.0.0.1/status)
      echo "Current state for the application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment is '${STATE_BEFORE_ROLLBACK}'";
      if [ "$STATE_BEFORE_ROLLBACK" == "blue" ];
        then
          echo "Rollback application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment to the 'green' state ..."
          ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD sh -c "\"/etc/nginx/wait-for-http -q -t 60 \\\$(/etc/nginx/get-host|xargs):\${GREEN_PORT}\"";
          ./blue-green-router reload-green RUNNING_ENVIRONMENT_CMD;
          ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD sh -c "\"/etc/nginx/wait-for-http -q -t 60 \\\$(/etc/nginx/get-host|xargs):\${BLUE_GREEN_PORT}\"";
          echo "Current state is '$(wget -q -O - http://127.0.0.1/status)'";
        else
          echo "Rollback application '${COMPOSE_PROJECT_NAME}', '${RUNNING_ENVIRONMENT}' environment to the 'green' state ..."
          ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD sh -c "\"/etc/nginx/wait-for-http -q -t 60 \\\$(/etc/nginx/get-host|xargs):\${BLUE_PORT}\"";
          ./blue-green-router reload-blue RUNNING_ENVIRONMENT_CMD;
          ./blue-green-router cmd RUNNING_ENVIRONMENT_CMD sh -c "\"/etc/nginx/wait-for-http -q -t 60 \\\$(/etc/nginx/get-host|xargs):\${BLUE_GREEN_PORT}\"";
          echo "Current state is '$(wget -q -O - http://127.0.0.1/status)'";
      fi
     ;;
     
  *)
    echo ""
    echo "usage: ./blue-green COMMAND [ENVIRONMENT]"
    echo ""
    echo  "Blue/Green mode for then fullstack application CLI"
    echo ""
    echo "Commands:"
    echo "  status              Show current blue/green mode (environment option is mandatory)"
    echo "  start               Start blue/green mode application"
    echo "  stop                Stop blue/green mode application"
    echo "  switch-to-blue      Build and switch application to the blue state"
    echo "  switch-to-green     Build and switch application to the green state"
    echo ""
    echo "Environments: "
    echo "  dev         Development environment"
    echo "  prod        Production environment"
    echo "  staging     Staging environment"
    echo "  test        Testing environment"
    echo ""
    echo "If omitted, will be used development environment."
    echo ""
    echo "Examples:"
    echo ""
    echo "  ./blue-green status dev"
    echo "  ./blue-green start dev"
    echo "  ./blue-green stop prod"
    echo "  ./blue-green-router switch-to-blue"
    echo ""
esac